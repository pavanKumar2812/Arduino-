#include <ESP8266WiFi.h>
#include <pgmspace.h>

WiFiClient client;
WiFiServer server(80);

const int ledPin = 2; // GPIO pin where the LED is connected
const int dt = 200;

const char index_html[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x08, 0xcc, 0x2f, 0x1d, 0x65, 0x04, 0x00, 0x69, 0x6e,
  0x64, 0x65, 0x78, 0x2e, 0x68, 0x74, 0x6d, 0x6c, 0x00, 0x6d, 0x90, 0xb1,
  0x6e, 0x03, 0x21, 0x0c, 0x86, 0xf7, 0x4a, 0x7d, 0x07, 0x97, 0xb9, 0x57,
  0xda, 0xad, 0xaa, 0xe0, 0x96, 0x5c, 0x3a, 0x55, 0x4a, 0x87, 0xeb, 0xd0,
  0x91, 0x03, 0x53, 0x50, 0x39, 0x38, 0x11, 0x27, 0xa7, 0xbc, 0x7d, 0x38,
  0x94, 0x44, 0x89, 0x14, 0x16, 0x63, 0xfb, 0xb3, 0xfd, 0xdb, 0xe2, 0xa9,
  0xdb, 0xac, 0xfa, 0xdf, 0xef, 0x35, 0x38, 0x1a, 0x43, 0xfb, 0xf8, 0x20,
  0x16, 0x0b, 0x41, 0xc5, 0x3f, 0xc9, 0x30, 0xb2, 0x1a, 0x41, 0x65, 0x8a,
  0x85, 0xf2, 0xc4, 0x88, 0xa4, 0x40, 0x3b, 0x95, 0xb7, 0x48, 0x92, 0xfd,
  0xf4, 0x9f, 0xcd, 0x3b, 0xbb, 0xc9, 0x45, 0x35, 0xa2, 0x64, 0x7b, 0x8f,
  0xf3, 0x94, 0x32, 0x31, 0xd0, 0x29, 0x12, 0xc6, 0xc2, 0xce, 0xde, 0x90,
  0x93, 0x06, 0xf7, 0x5e, 0x63, 0x53, 0x9d, 0x67, 0xf0, 0xd1, 0x93, 0x57,
  0xa1, 0xd9, 0x6a, 0x15, 0x50, 0xbe, 0xbd, 0xbc, 0x5e, 0x7a, 0x91, 0xa7,
  0x80, 0x6d, 0x97, 0xf4, 0x6e, 0x2c, 0xd5, 0x82, 0x57, 0x7f, 0x11, 0xc3,
  0x4f, 0x6a, 0xc4, 0x90, 0xcc, 0xe1, 0x4c, 0x4f, 0xed, 0x2a, 0x78, 0xfd,
  0x0f, 0x03, 0x86, 0x34, 0x03, 0xa5, 0x3a, 0x35, 0xa7, 0x00, 0xe4, 0x10,
  0xbe, 0xd6, 0xdd, 0x87, 0xe0, 0xd3, 0x99, 0x55, 0xe0, 0x32, 0x5a, 0xc9,
  0x78, 0x40, 0x93, 0xca, 0x82, 0xfd, 0x2e, 0xc7, 0x85, 0x81, 0x4d, 0x14,
  0x5c, 0xb5, 0x62, 0xc8, 0x77, 0x49, 0x6b, 0xaf, 0x51, 0x6b, 0x0b, 0x5b,
  0xe5, 0x2c, 0x32, 0xea, 0xa7, 0xde, 0xef, 0x08, 0x38, 0x59, 0xa5, 0xe4,
  0x4f, 0x01, 0x00, 0x00
};

const char* ssid = "IDR@MakersLab";
const char* password = "12345678";

void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, HIGH);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) 
  {
    Serial.print("..");
    delay(dt);
  }
  Serial.println("");
  Serial.println("NodeMCU is connected...!");
  Serial.println(WiFi.localIP());
  server.begin();
}

void loop() {
  client = server.available();
  if (client) 
  {
    String request = client.readStringUntil('\n');
    Serial.println(request);
    request.trim(); // removes all leading/trailing whitespaces from the string
    if (request.indexOf("GET /ledon HTTP/1.1") != -1) 
    {
      digitalWrite(ledPin, LOW);
    }
    if (request.indexOf("GET /ledoff HTTP/1.1") != -1) 
    {
      digitalWrite(ledPin, HIGH);
    }

    client.println("HTTP/1.1 200 OK");
    client.println("Content-Encoding: gzip");
    client.println("Content-Type: text/html");
    client.println();
    client.write_P(index_html, sizeof(index_html));
  }
}